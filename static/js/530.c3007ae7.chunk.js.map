{"version":3,"file":"static/js/530.c3007ae7.chunk.js","mappings":"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","sources":["API/APIThemoviedb.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/Movie.module.css?f30d","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2b15838aeeca2717c2311fc28fc79239';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"movies_list\":\"Movie_movies_list__QTeWc\",\"movies_link\":\"Movie_movies_link__GdugY\"};","\nimport React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './Movie.module.css'\n\nconst MovieList = ({movies}) => {\n  const location = useLocation();\n\n\n  \n\n\n  \n  \n\n  return (\n    <ul className={s.movies_list}>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }} className={s.movies_link}>\n            {original_title}\n          </Link>\n       \n        </li>\n      ))}\n    </ul>\n    )\n}\n\nexport default MovieList\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_container\":\"Movies_movies_container__BoUga\"};","import { getMovieQuery } from 'API/APIThemoviedb';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './Movies.module.css'\n\nconst Movies  = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams] = useSearchParams();\n  const [, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('q');\n\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ q: e.target.elements.query.value });\n\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchMovie = async () => {\n      setError('');\n      setIsLoading(true);\n      try {\n        const data = await getMovieQuery(searchQuery);\n\n        setMovies(data.results);\n      } catch (error) {\n        setError('There is something wrong in your action');\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <section className={s.movies_container}>\n      <div>\n        <h1>SEARCH MOVIE</h1>\n        <form onSubmit={handleSubmit}>\n            <label>\n              <input \n              type={'text'} \n              name=\"query\" \n              autoFocus \n              placeholder=\"Search movies...\" \n              \n              defaultValue={searchQuery}\n              />\n               \n              <button type=\"submit\">SEARCH</button>\n            </label>\n        </form>\n        {movies.length > 0 && <MovieList movies={movies} />}\n      </div>\n      {isLoading && <Loader/>}  \n    </section>\n  );\n}\n\nMovies.propTypes = {\n  handleSubmit: PropTypes.func,\n  movies: PropTypes.arrayOf(PropTypes.object),\n\n}\n\nexport default Movies \n\n\n"],"names":["getTranding","axios","data","getMovieQuery","query","page","params","language","getMoviesById","id","getCast","cast","getReviews","results","api_key","movies","location","useLocation","className","s","map","original_title","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovie","console","log","toast","onSubmit","e","preventDefault","q","target","elements","value","type","name","autoFocus","placeholder","defaultValue","length","MovieList","Loader"],"sourceRoot":""}