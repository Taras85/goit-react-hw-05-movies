{"version":3,"file":"static/js/782.84d8d85a.chunk.js","mappings":"+SAOO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,wBAD5B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gGAAoCC,EAApC,+BAA2C,EAC1CC,EAAS,CAAEF,MAAAA,EAAOG,SAAU,QAASF,KAAAA,GADtC,SAGkBJ,EAAAA,EAAAA,IAAU,gBAAiB,CAAEK,OAAAA,IAH/C,uBAGGJ,EAHH,EAGGA,KAHH,kBAIEA,GAJF,mEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,IADtC,uBACGP,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADlB,uBACGP,EADH,EACGA,KADH,kBAEEA,EAAKS,MAFP,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADlB,uBACGP,EADH,EACGA,KADH,kBAEEA,EAAKW,SAFP,kEAtBPZ,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEa,QAHV,mC,iFCDhB,EAA8B,2BAA9B,EAAuE,2B,SC4BvE,EAxBkB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,GAAWC,EAAAA,EAAAA,MASjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,eAAgBZ,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMa,GAAE,kBAAab,GAAMc,MAAO,CAAEC,KAAMR,GAAYE,UAAWC,EAAjE,SACGE,KAFIZ,EADC,KAUjB,C,8IC1BD,EAAqC,wC,SCkDrC,EA1CoB,WAClB,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KA2BA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBF,EAAS,IADQ,mBAGI5B,EAAAA,EAAAA,MAHJ,OAGTE,EAHS,OAIfwB,EAAUxB,EAAKW,SAJA,gDAMfe,EAAS,2CANM,qGAAH,qDAWhBE,GACD,GAAE,KACHD,EAAAA,EAAAA,YAAU,WACHF,GACLI,EAAAA,GAAAA,MAAYJ,EACb,GAAE,CAACA,KAOF,iBAAKT,UAAWC,EAAhB,WACG,wBAAI,mBACHJ,EAAOiB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWlB,OAAQA,MAI/C,C","sources":["API/APIThemoviedb.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/Movie.module.css?f30d","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/GetTrending.module.css?66f3","pages/GetTrending.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2b15838aeeca2717c2311fc28fc79239';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  //  const params = { query, language: 'uk-UA', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"movies_list\":\"Movie_movies_list__QTeWc\",\"movies_link\":\"Movie_movies_link__GdugY\"};","\nimport React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './Movie.module.css'\n\nconst MovieList = ({movies}) => {\n  const location = useLocation();\n\n\n  \n\n\n  \n  \n\n  return (\n    <ul className={s.movies_list}>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }} className={s.movies_link}>\n            {original_title}\n          </Link>\n       \n        </li>\n      ))}\n    </ul>\n    )\n}\n\nexport default MovieList\n","// extracted by mini-css-extract-plugin\nexport default {\"trending_container\":\"GetTrending_trending_container__hSEeH\"};","import MovieList from 'components/MovieList/MovieList';\nimport React, {  useEffect, useState } from 'react'\nimport { getTranding } from 'API/APIThemoviedb';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n// import Loader from 'components/Loader/Loader';\nimport s from './GetTrending.module.css'\n\n\nconst GetTrending = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  // const [isLoading, setIsLoading] = useState(true);\n\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setError('');\n      try {\n        const data = await getTranding();\n        setMovies(data.results);\n      } catch (error) {\n        setError('There is something wrong in your action');\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, []);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n\n\n\n\n  return (\n    <div className={s.trending_container}>\n       <h1>Tranding today</h1>\n       {movies.length > 0 && <MovieList movies={movies} />}\n       \n    </div>\n  )\n}\n\nGetTrending.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default GetTrending\n"],"names":["getTranding","axios","data","getMovieQuery","query","page","params","language","getMoviesById","id","getCast","cast","getReviews","results","api_key","movies","location","useLocation","className","s","map","original_title","to","state","from","useState","setMovies","error","setError","useEffect","fetchMovie","toast","length","MovieList"],"sourceRoot":""}