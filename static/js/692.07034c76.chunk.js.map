{"version":3,"file":"static/js/692.07034c76.chunk.js","mappings":"+SAMO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,wBAD5B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gGAAoCC,EAApC,+BAA2C,EAC1CC,EAAS,CAAEF,MAAAA,EAAOG,SAAU,QAASF,KAAAA,GADtC,SAEkBJ,EAAAA,EAAAA,IAAU,gBAAiB,CAAEK,OAAAA,IAF/C,uBAEGJ,EAFH,EAEGA,KAFH,kBAGEA,GAHF,mEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,IADtC,uBACGP,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADlB,uBACGP,EADH,EACGA,KADH,kBAEEA,EAAKS,MAFP,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,yFACkBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADlB,uBACGP,EADH,EACGA,KADH,kBAEEA,EAAKW,SAFP,kEApBPZ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEa,QAFV,mC,kHCqDhB,UAlDe,WACb,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAyBJ,EAAAA,EAAAA,WAAS,GAAzBK,GAAT,eAuBA,IArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,IAAMS,EAAU,mCAAG,2FACjBL,EAAS,IADQ,mBAGIP,EAAAA,EAAAA,IAAWG,GAHf,OAGTb,EAHS,OAKfmB,EAAanB,GALE,gDAOfiB,EAAS,2CAPM,yBASfG,GAAa,GATE,4EAAH,qDAYhBE,GAbqB,CActB,GAAE,CAACT,KACJQ,EAAAA,EAAAA,YAAU,WACHL,GACLO,EAAAA,GAAAA,MAAYP,EACb,GAAE,CAACA,IAECE,EAGL,OAAOA,EAAUM,OAAS,GACxB,8BACE,0BACE,+BACGN,QADH,IACGA,OADH,EACGA,EAAWO,KAAI,SAAAC,GAAM,OACpB,2BACE,6CACVA,EAAOC,WACG,mBACA,mCAASD,EAAOE,aAJTF,EAAOnB,GADI,WAY5B,wBAAI,oCAEP,C","sources":["API/APIThemoviedb.jsx","components/Reviews/Review.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2b15838aeeca2717c2311fc28fc79239';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}","import { getReviews } from 'API/APIThemoviedb';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Review = () => {\n  const { moviesId } = useParams();\n  const [error, setError] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const [, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!moviesId) return;\n    const fetchMovie = async () => {\n      setError('');\n      try {\n        const data = await getReviews(moviesId);\n\n        setMovieData(data);\n      } catch (error) {\n        setError('There is something wrong in your action');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [moviesId]);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  if (!movieData) {\n    return;\n  }\n  return movieData.length > 0 ? (\n    <section>\n      <div>\n        <ul>\n          {movieData?.map(review => (\n            <li key={review.id}>\n              <div>{`Author\n: ${review.author}`}</div>\n              <br />\n              <div>{`${review.content}`}</div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  ) : (\n    <h4>There is not any reviews for now</h4>\n  );\n}\n\nexport default Review\n"],"names":["getTranding","axios","data","getMovieQuery","query","page","params","language","getMoviesById","id","getCast","cast","getReviews","results","api_key","moviesId","useParams","useState","error","setError","movieData","setMovieData","setIsLoading","useEffect","fetchMovie","toast","length","map","review","author","content"],"sourceRoot":""}