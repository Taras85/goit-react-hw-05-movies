{"version":3,"file":"static/js/616.ab03fc7f.chunk.js","mappings":"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","sources":["API/APIThemoviedb.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2b15838aeeca2717c2311fc28fc79239';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  //  const params = { query, language: 'uk-UA', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"movie_container\":\"MovieDetails_movie_container__fW392\",\"movie_details\":\"MovieDetails_movie_details__j4e36\",\"inform_link_list\":\"MovieDetails_inform_link_list__f6T9o\",\"goback\":\"MovieDetails_goback__-NasX\"};","import { getMoviesById } from 'API/APIThemoviedb';\nimport Loader from 'components/Loader/Loader';\nimport React, { Suspense, useEffect, useState } from 'react'\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport s from './MovieDetails.module.css'\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { moviesId } = useParams();\n  const location = useLocation();\n\n\n\n  const backLink = location.state?.from ?? '/';\n\n  \n  \n \n \n  \n  useEffect(() => {\n    if (!moviesId) return;\n    const fetchMovie = async () => {\n      setError('');\n      try {\n        const data = await getMoviesById(moviesId);\n\n        setMovieData(data);\n      } catch (error) {\n        setError('There is something wrong in your action');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [moviesId]);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <section className={s.movie_container}>\n      {movieData && (\n        <>\n          <Link  to={backLink} className={s.goback}>\n            GO BACK\n          </Link>\n          <div className={s.movie_details}>\n            <img\n\n              src={`https://image.tmdb.org/t/p/w200${movieData.poster_path}`}\n              alt=\"movie poster\"\n            />\n\n            <div>\n              <ul>\n                <li >\n                  <h1>{`${\n                    movieData.original_title\n                  }(${movieData.release_date?.slice(0, 4)})`}</h1>\n                  <div>{`User score: ${\n                    movieData.vote_average?.toFixed() * 10\n                  }%`}</div>\n                </li>\n                <li >\n                  <h2> Overview</h2>\n                  <div>{movieData.overview}</div>\n                </li>\n                <li >\n                  <h2> Genres</h2>\n                  {movieData.genres?.map(g => g.name).join(', ')}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <h3>Additional information</h3>\n          <ul className={s.inform_link_list}>\n            <li>\n              <Link to=\"cast\" state={{ from: backLink }} className={s.inform_link}>\n              \n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLink }} className={s.inform_link}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader/>}>\n          <Outlet />\n          </Suspense>\n        </>\n      )}\n        {isLoading && <Loader/>}  \n    </section>\n  );\n}\n\nexport default MovieDetails\n\n\nMovieDetails.propTypes = {\n  to: PropTypes.object,\n}"],"names":["getTranding","axios","data","getMovieQuery","query","page","params","language","getMoviesById","id","getCast","cast","getReviews","results","api_key","useState","movieData","setMovieData","isLoading","setIsLoading","error","setError","moviesId","useParams","backLink","useLocation","state","from","useEffect","fetchMovie","toast","className","s","to","src","poster_path","alt","original_title","release_date","slice","vote_average","toFixed","overview","genres","map","g","name","join","Suspense","fallback","Loader"],"sourceRoot":""}